MainActivity.java
package com.example.myapplication;

import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;

public class MainActivity extends AppCompatActivity {
    private int desktop_height;
    int desktop_width;
    float ball_size = 16;
    float ball_speed = 3;
    float ball_velocity =90;
    float ball_X;
    float ball_Y;
    float column_height;
    float columu_height2;
    float column_width;
    float column_width2;
    float column_X;
    float column_Y;
    float column_X2;
    float column_Y2;
    float column_speed;
    int num = 0;
    boolean end = false;
    MyGameView myGameView;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        //实程序全屏运行
        getWindow().setFlags(WindowMannager.LayoutParams.FLAG_FORCE_NOT_FULLSCREEN,windowManager.LayoutParams.FLAG_FULLSCREEN);
        //获取游戏视图的实例
        MyGameView myGameView = new MyGameView(this);
        setContentView(myGameView);
        //获取窗口管理器
        WindowManager windowManager = getWindowmanager();
        Display display = windowManager.getDefaultDisplay();
        DisplayMetrics metrics = new DisplayMetrics();
        display.getMetrics(metrics);
        desktop_width = metrics.widthPixels;
        desktop_height = metrics.heightPixls;
        play();
    }

    public void play(){
        end = false;
        column_X = desktop_width - column_width;
        column_Y = 0;
        column_X2 = desktop_width - column_width;
        column_Y2 = desktop_height;
        column_height = desktop_height/2 - 200;
        columu_height2 = desktop_height - column_height - 200;
        num = 0;
        column_speed = 5;
        myGameView.setOnTouchListener(gesture)

        ball_speed = 3.5;
        ball_velocity = 90;
        ball_X = 50;
        ball_Y = desktop_height/2;
        handler.sendEmptyMessage(Ox123);
        Timer timer = new Timer();
        timer.schedule(new TimerTask(){
            @Override
            public void run(){
                ball_Y = ball_Y + ball_velocity;
                column_X = column_X - column_speed;
                column_X2 = column_X2 - column_speed;
                //如果柱子碰到屏幕边缘
                if(column_X <= 0){
                    column_X = desktop_width - column_width;
                    column_X2 = desktop_width - column_width;
                }
                //如果小球碰到屏幕边缘
                if(ball_Y >= desktop_height){
                    end = true;
                }
                if(ball_X >= column_X){
                    if(ball_Y<column_height || ball_Y > columu_height2){
                        end = true;
                    }
                }
                handler.sendEmptyMessage(Ox123);
            }
        },0,15);

    }
    Handler handler = new Handler(){
        @Override
        public  void  handleMessage(Message msg){
            super.handleMessage(msg);
            if(msg.what == Ox123){
                myGameView.invalidete();
            }
        }
    };

    View.OnTouchListener gesture = new View.OnTouchListener(){
        @Override
        public boolean onTouch(View v, MotionEvent event){
            switch (event.getAction()){
                case MotionEvent.ACTTON_DOWN;
                //手指点击事件
                 ball_Y = ball_Y - ball_velocity;
                 handler.sendEmptyMessage(Ox123);
                 break;
            }
            return true;
        }
    }

    class  MyGameView extends View{
        Paint paint = new Paint();
        public MyGameView(Context context){
            super(context);
        }
     @Override
     protected void onDraw(Canvas canvas){
            super.onDraw(canvas);
            paint.setStyle(Paint.Style.FILL);
            paint.setAntiAlias(true);//设置抗锯齿
         if(end){
             //执行游戏结束后的效果
             paint.setColor(Color.RED);
             paint.setTextSize(80);
             canvas.drawText("游戏结束", desktop_width/2,desktop_height/2,paint);
             this.setOnTouchListener(new OnTouchListener(){
                 @Override
                 public boolean onTuch(View v,MotionEvent event){
                     switch (event.getAction()){
                         case MotionEvent.ACTTON_DOWN:
                             play();
                     }
                     return true;
                 }
             })
         }else{
             //执行游戏进行中的效果
             paint.setColor(Color.RED);
             paint.setTextSize(80);
             canvas.drawText(num+"", desktop_width/2-10,80,paint);
             canvas.drawCircle(ball_X,ball_Y,ball_size,paint);
             //绘制上柱
             paint.setColor(Color.rgb(80,80,200));
             canvas.drawRect(column_X,column_Y,column_width,column_height,paint);
             //绘制下柱
             canvas.drawRect(column_X2,column_Y2 - columu_height2,column_X2+column_width2,column_Y2+columu_height2,paint);
         }
     }
    }
}



AndroidManifest.xml
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.myapplication" >

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme" >
        <activity android:name=".MainActivity"  android:screenOrientation="landscape">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>


